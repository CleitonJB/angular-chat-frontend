"use strict";var ze=Object.defineProperty,Je=Object.defineProperties,Xe=Object.getOwnPropertyDescriptors,oe=Object.getOwnPropertySymbols,Ke=Object.prototype.hasOwnProperty,Ve=Object.prototype.propertyIsEnumerable,re=(T,S,p)=>S in T?ze(T,S,{enumerable:!0,configurable:!0,writable:!0,value:p}):T[S]=p,b=(T,S)=>{for(var p in S||(S={}))Ke.call(S,p)&&re(T,p,S[p]);if(oe)for(var p of oe(S))Ve.call(S,p)&&re(T,p,S[p]);return T},A=(T,S)=>Je(T,Xe(S));(self.webpackChunkapp=self.webpackChunkapp||[]).push([[4935],{4935:(T,S,p)=>{p.r(S),p.d(S,{HomePageModule:()=>Fe});var N=p(6019),k=p(2651),U=p(9010),J=p(8725);class W{constructor(){this.user="",this.msgText=""}}var l=p(865),X=p(4762);const se=[0,2e3,1e4,3e4,null];class K{constructor(e){this._retryDelays=void 0!==e?[...e,null]:se}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}var f=p(8239);class I extends Error{constructor(e,t){const n=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=n}}class j extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class D extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class ie extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=n}}class ce extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=n}}class ae extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=n}}class le extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class he extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=n}}class V{constructor(e,t,n){this.statusCode=e,this.statusText=t,this.content=n}}class Z{get(e,t){return this.send(A(b({},t),{method:"GET",url:e}))}post(e,t){return this.send(A(b({},t),{method:"POST",url:e}))}delete(e,t){return this.send(A(b({},t),{method:"DELETE",url:e}))}getCookieString(e){return""}}var i=(()=>{return(r=i||(i={}))[r.Trace=0]="Trace",r[r.Debug=1]="Debug",r[r.Information=2]="Information",r[r.Warning=3]="Warning",r[r.Error=4]="Error",r[r.Critical=5]="Critical",r[r.None=6]="None",i;var r})();class ${constructor(){}log(e,t){}}$.instance=new $;class w{static isRequired(e,t){if(null==e)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,n){if(!(e in t))throw new Error(`Unknown ${n} value: ${e}.`)}}class C{static get isBrowser(){return"object"==typeof window}static get isWebWorker(){return"object"==typeof self&&"importScripts"in self}static get isNode(){return!this.isBrowser&&!this.isWebWorker}}function R(r,e){let t="";return L(r)?(t=`Binary data of length ${r.byteLength}`,e&&(t+=`. Content: '${function(r){const e=new Uint8Array(r);let t="";return e.forEach(n=>{t+=`0x${n<16?"0":""}${n.toString(16)} `}),t.substr(0,t.length-1)}(r)}'`)):"string"==typeof r&&(t=`String data of length ${r.length}`,e&&(t+=`. Content: '${r}'`)),t}function L(r){return r&&"undefined"!=typeof ArrayBuffer&&(r instanceof ArrayBuffer||r.constructor&&"ArrayBuffer"===r.constructor.name)}function G(r,e,t,n,o,s,c){return B.apply(this,arguments)}function B(){return(B=(0,f.Z)(function*(r,e,t,n,o,s,c){let a={};if(o){const P=yield o();P&&(a={Authorization:`Bearer ${P}`})}const[g,h]=x();a[g]=h,r.log(i.Trace,`(${e} transport) sending data. ${R(s,c.logMessageContent)}.`);const u=L(s)?"arraybuffer":"text",E=yield t.post(n,{content:s,headers:b(b({},a),c.headers),responseType:u,timeout:c.timeout,withCredentials:c.withCredentials});r.log(i.Trace,`(${e} transport) request complete. Response status: ${E.statusCode}.`)})).apply(this,arguments)}class _e{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),0===this._subject.observers.length&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(t=>{})}}class O{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const n=`[${(new Date).toISOString()}] ${i[e]}: ${t}`;switch(e){case i.Critical:case i.Error:this.out.error(n);break;case i.Warning:this.out.warn(n);break;case i.Information:this.out.info(n);break;default:this.out.log(n)}}}}function x(){let r="X-SignalR-User-Agent";return C.isNode&&(r="User-Agent"),[r,pe("6.0.1",fe(),C.isNode?"NodeJS":"Browser",me())]}function pe(r,e,t,n){let o="Microsoft SignalR/";const s=r.split(".");return o+=`${s[0]}.${s[1]}`,o+=` (${r}; `,o+=e&&""!==e?`${e}; `:"Unknown OS; ",o+=`${t}`,o+=n?`; ${n}`:"; Unknown Runtime Version",o+=")",o}function fe(){if(!C.isNode)return"";switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}}function me(){if(C.isNode)return process.versions.node}function q(r){return r.stack?r.stack:r.message?r.message:`${r}`}class Ce extends Z{constructor(e){if(super(),this._logger=e,"undefined"==typeof fetch){const t=require;this._jar=new(t("tough-cookie").CookieJar),this._fetchType=t("node-fetch"),this._fetchType=t("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind(function(){if("undefined"!=typeof globalThis)return globalThis;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if("undefined"!=typeof global)return global;throw new Error("could not find global")}());if("undefined"==typeof AbortController){const t=require;this._abortControllerType=t("abort-controller")}else this._abortControllerType=AbortController}send(e){var t=this;return(0,f.Z)(function*(){if(e.abortSignal&&e.abortSignal.aborted)throw new D;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const n=new t._abortControllerType;let o;e.abortSignal&&(e.abortSignal.onabort=()=>{n.abort(),o=new D});let c,s=null;e.timeout&&(s=setTimeout(()=>{n.abort(),t._logger.log(i.Warning,"Timeout from HTTP request."),o=new j},e.timeout));try{c=yield t._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:!0===e.withCredentials?"include":"same-origin",headers:b({"Content-Type":"text/plain;charset=UTF-8","X-Requested-With":"XMLHttpRequest"},e.headers),method:e.method,mode:"cors",redirect:"follow",signal:n.signal})}catch(h){throw o||(t._logger.log(i.Warning,`Error from HTTP request. ${h}.`),h)}finally{s&&clearTimeout(s),e.abortSignal&&(e.abortSignal.onabort=null)}if(!c.ok){const h=yield Q(c,"text");throw new I(h||c.statusText,c.status)}const g=yield Q(c,e.responseType);return new V(c.status,c.statusText,g)})()}getCookieString(e){let t="";return C.isNode&&this._jar&&this._jar.getCookies(e,(n,o)=>t=o.join("; ")),t}}function Q(r,e){let t;switch(e){case"arraybuffer":t=r.arrayBuffer();break;default:t=r.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`)}return t}class ye extends Z{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new D):e.method?e.url?new Promise((t,n)=>{const o=new XMLHttpRequest;o.open(e.method,e.url,!0),o.withCredentials=void 0===e.withCredentials||e.withCredentials,o.setRequestHeader("X-Requested-With","XMLHttpRequest"),o.setRequestHeader("Content-Type","text/plain;charset=UTF-8");const s=e.headers;s&&Object.keys(s).forEach(c=>{o.setRequestHeader(c,s[c])}),e.responseType&&(o.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{o.abort(),n(new D)}),e.timeout&&(o.timeout=e.timeout),o.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),o.status>=200&&o.status<300?t(new V(o.status,o.statusText,o.response||o.responseText)):n(new I(o.response||o.responseText||o.statusText,o.status))},o.onerror=()=>{this._logger.log(i.Warning,`Error from HTTP request. ${o.status}: ${o.statusText}.`),n(new I(o.statusText,o.status))},o.ontimeout=()=>{this._logger.log(i.Warning,"Timeout from HTTP request."),n(new j)},o.send(e.content||"")}):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class Se extends Z{constructor(e){if(super(),"undefined"!=typeof fetch||C.isNode)this._httpClient=new Ce(e);else{if("undefined"==typeof XMLHttpRequest)throw new Error("No usable HttpClient found.");this._httpClient=new ye(e)}}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new D):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}let M=(()=>{class r{}return r.Authorization="Authorization",r.Cookie="Cookie",r})();var m=(()=>{return(r=m||(m={}))[r.None=0]="None",r[r.WebSockets=1]="WebSockets",r[r.ServerSentEvents=2]="ServerSentEvents",r[r.LongPolling=4]="LongPolling",m;var r})(),y=(()=>{return(r=y||(y={}))[r.Text=1]="Text",r[r.Binary=2]="Binary",y;var r})();class ve{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}}class Y{constructor(e,t,n,o){this._httpClient=e,this._accessTokenFactory=t,this._logger=n,this._pollAbort=new ve,this._options=o,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}connect(e,t){var n=this;return(0,f.Z)(function*(){if(w.isRequired(e,"url"),w.isRequired(t,"transferFormat"),w.isIn(t,y,"transferFormat"),n._url=e,n._logger.log(i.Trace,"(LongPolling transport) Connecting."),t===y.Binary&&"undefined"!=typeof XMLHttpRequest&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[o,s]=x(),c=b({[o]:s},n._options.headers),a={abortSignal:n._pollAbort.signal,headers:c,timeout:1e5,withCredentials:n._options.withCredentials};t===y.Binary&&(a.responseType="arraybuffer");const g=yield n._getAccessToken();n._updateHeaderToken(a,g);const h=`${e}&_=${Date.now()}`;n._logger.log(i.Trace,`(LongPolling transport) polling: ${h}.`);const u=yield n._httpClient.get(h,a);200!==u.statusCode?(n._logger.log(i.Error,`(LongPolling transport) Unexpected response code: ${u.statusCode}.`),n._closeError=new I(u.statusText||"",u.statusCode),n._running=!1):n._running=!0,n._receiving=n._poll(n._url,a)})()}_getAccessToken(){var e=this;return(0,f.Z)(function*(){return e._accessTokenFactory?yield e._accessTokenFactory():null})()}_updateHeaderToken(e,t){e.headers||(e.headers={}),t?e.headers[M.Authorization]=`Bearer ${t}`:e.headers[M.Authorization]&&delete e.headers[M.Authorization]}_poll(e,t){var n=this;return(0,f.Z)(function*(){try{for(;n._running;){const o=yield n._getAccessToken();n._updateHeaderToken(t,o);try{const s=`${e}&_=${Date.now()}`;n._logger.log(i.Trace,`(LongPolling transport) polling: ${s}.`);const c=yield n._httpClient.get(s,t);204===c.statusCode?(n._logger.log(i.Information,"(LongPolling transport) Poll terminated by server."),n._running=!1):200!==c.statusCode?(n._logger.log(i.Error,`(LongPolling transport) Unexpected response code: ${c.statusCode}.`),n._closeError=new I(c.statusText||"",c.statusCode),n._running=!1):c.content?(n._logger.log(i.Trace,`(LongPolling transport) data received. ${R(c.content,n._options.logMessageContent)}.`),n.onreceive&&n.onreceive(c.content)):n._logger.log(i.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(s){n._running?s instanceof j?n._logger.log(i.Trace,"(LongPolling transport) Poll timed out, reissuing."):(n._closeError=s,n._running=!1):n._logger.log(i.Trace,`(LongPolling transport) Poll errored after shutdown: ${s.message}`)}}}finally{n._logger.log(i.Trace,"(LongPolling transport) Polling complete."),n.pollAborted||n._raiseOnClose()}})()}send(e){var t=this;return(0,f.Z)(function*(){return t._running?G(t._logger,"LongPolling",t._httpClient,t._url,t._accessTokenFactory,e,t._options):Promise.reject(new Error("Cannot send until the transport is connected"))})()}stop(){var e=this;return(0,f.Z)(function*(){e._logger.log(i.Trace,"(LongPolling transport) Stopping polling."),e._running=!1,e._pollAbort.abort();try{yield e._receiving,e._logger.log(i.Trace,`(LongPolling transport) sending DELETE request to ${e._url}.`);const t={},[n,o]=x();t[n]=o;const s={headers:b(b({},t),e._options.headers),timeout:e._options.timeout,withCredentials:e._options.withCredentials},c=yield e._getAccessToken();e._updateHeaderToken(s,c),yield e._httpClient.delete(e._url,s),e._logger.log(i.Trace,"(LongPolling transport) DELETE request sent.")}finally{e._logger.log(i.Trace,"(LongPolling transport) Stop finished."),e._raiseOnClose()}})()}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(i.Trace,e),this.onclose(this._closeError)}}}class Ee{constructor(e,t,n,o){this._httpClient=e,this._accessTokenFactory=t,this._logger=n,this._options=o,this.onreceive=null,this.onclose=null}connect(e,t){var n=this;return(0,f.Z)(function*(){if(w.isRequired(e,"url"),w.isRequired(t,"transferFormat"),w.isIn(t,y,"transferFormat"),n._logger.log(i.Trace,"(SSE transport) Connecting."),n._url=e,n._accessTokenFactory){const o=yield n._accessTokenFactory();o&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(o)}`)}return new Promise((o,s)=>{let a,c=!1;if(t===y.Text){if(C.isBrowser||C.isWebWorker)a=new n._options.EventSource(e,{withCredentials:n._options.withCredentials});else{const g=n._httpClient.getCookieString(e),h={};h.Cookie=g;const[u,E]=x();h[u]=E,a=new n._options.EventSource(e,{withCredentials:n._options.withCredentials,headers:b(b({},h),n._options.headers)})}try{a.onmessage=g=>{if(n.onreceive)try{n._logger.log(i.Trace,`(SSE transport) data received. ${R(g.data,n._options.logMessageContent)}.`),n.onreceive(g.data)}catch(h){return void n._close(h)}},a.onerror=g=>{c?n._close():s(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},a.onopen=()=>{n._logger.log(i.Information,`SSE connected to ${n._url}`),n._eventSource=a,c=!0,o()}}catch(g){return void s(g)}}else s(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"))})})()}send(e){var t=this;return(0,f.Z)(function*(){return t._eventSource?G(t._logger,"SSE",t._httpClient,t._url,t._accessTokenFactory,e,t._options):Promise.reject(new Error("Cannot send until the transport is connected"))})()}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}class ke{constructor(e,t,n,o,s,c){this._logger=n,this._accessTokenFactory=t,this._logMessageContent=o,this._webSocketConstructor=s,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=c}connect(e,t){var n=this;return(0,f.Z)(function*(){if(w.isRequired(e,"url"),w.isRequired(t,"transferFormat"),w.isIn(t,y,"transferFormat"),n._logger.log(i.Trace,"(WebSockets transport) Connecting."),n._accessTokenFactory){const o=yield n._accessTokenFactory();o&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(o)}`)}return new Promise((o,s)=>{let c;e=e.replace(/^http/,"ws");const a=n._httpClient.getCookieString(e);let g=!1;if(C.isNode){const h={},[u,E]=x();h[u]=E,a&&(h[M.Cookie]=`${a}`),c=new n._webSocketConstructor(e,void 0,{headers:b(b({},h),n._headers)})}c||(c=new n._webSocketConstructor(e)),t===y.Binary&&(c.binaryType="arraybuffer"),c.onopen=h=>{n._logger.log(i.Information,`WebSocket connected to ${e}.`),n._webSocket=c,g=!0,o()},c.onerror=h=>{let u=null;u="undefined"!=typeof ErrorEvent&&h instanceof ErrorEvent?h.error:"There was an error with the transport",n._logger.log(i.Information,`(WebSockets transport) ${u}.`)},c.onmessage=h=>{if(n._logger.log(i.Trace,`(WebSockets transport) data received. ${R(h.data,n._logMessageContent)}.`),n.onreceive)try{n.onreceive(h.data)}catch(u){return void n._close(u)}},c.onclose=h=>{if(g)n._close(h);else{let u=null;u="undefined"!=typeof ErrorEvent&&h instanceof ErrorEvent?h.error:"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",s(new Error(u))}}})})()}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(i.Trace,`(WebSockets transport) sending data. ${R(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(i.Trace,"(WebSockets transport) socket closed."),this.onclose&&(!this._isCloseEvent(e)||!1!==e.wasClean&&1e3===e.code?e instanceof Error?this.onclose(e):this.onclose():this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)))}_isCloseEvent(e){return e&&"boolean"==typeof e.wasClean&&"number"==typeof e.code}}class Te{constructor(e,t={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,w.isRequired(e,"url"),this._logger=void 0===(r=t.logger)?new O(i.Information):null===r?$.instance:void 0!==r.log?r:new O(r),this.baseUrl=this._resolveUrl(e),(t=t||{}).logMessageContent=void 0!==t.logMessageContent&&t.logMessageContent,"boolean"!=typeof t.withCredentials&&void 0!==t.withCredentials)throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");var r;t.withCredentials=void 0===t.withCredentials||t.withCredentials,t.timeout=void 0===t.timeout?1e5:t.timeout;let n=null,o=null;if(C.isNode){const s=require;n=s("ws"),o=s("eventsource")}C.isNode||"undefined"==typeof WebSocket||t.WebSocket?C.isNode&&!t.WebSocket&&n&&(t.WebSocket=n):t.WebSocket=WebSocket,C.isNode||"undefined"==typeof EventSource||t.EventSource?C.isNode&&!t.EventSource&&void 0!==o&&(t.EventSource=o):t.EventSource=EventSource,this._httpClient=t.httpClient||new Se(this._logger),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}start(e){var t=this;return(0,f.Z)(function*(){if(w.isIn(e=e||y.Binary,y,"transferFormat"),t._logger.log(i.Debug,`Starting connection with transfer format '${y[e]}'.`),"Disconnected"!==t._connectionState)return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(t._connectionState="Connecting",t._startInternalPromise=t._startInternal(e),yield t._startInternalPromise,"Disconnecting"===t._connectionState){const n="Failed to start the HttpConnection before stop() was called.";return t._logger.log(i.Error,n),yield t._stopPromise,Promise.reject(new Error(n))}if("Connected"!==t._connectionState){const n="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return t._logger.log(i.Error,n),Promise.reject(new Error(n))}t._connectionStarted=!0})()}send(e){return"Connected"!==this._connectionState?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new F(this.transport)),this._sendQueue.send(e))}stop(e){var t=this;return(0,f.Z)(function*(){return"Disconnected"===t._connectionState?(t._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===t._connectionState?(t._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),t._stopPromise):(t._connectionState="Disconnecting",t._stopPromise=new Promise(n=>{t._stopPromiseResolver=n}),yield t._stopInternal(e),void(yield t._stopPromise))})()}_stopInternal(e){var t=this;return(0,f.Z)(function*(){t._stopError=e;try{yield t._startInternalPromise}catch(n){}if(t.transport){try{yield t.transport.stop()}catch(n){t._logger.log(i.Error,`HttpConnection.transport.stop() threw error '${n}'.`),t._stopConnection()}t.transport=void 0}else t._logger.log(i.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")})()}_startInternal(e){var t=this;return(0,f.Z)(function*(){let n=t.baseUrl;t._accessTokenFactory=t._options.accessTokenFactory;try{if(t._options.skipNegotiation){if(t._options.transport!==m.WebSockets)throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");t.transport=t._constructTransport(m.WebSockets),yield t._startTransport(n,e)}else{let o=null,s=0;do{if(o=yield t._getNegotiationResponse(n),"Disconnecting"===t._connectionState||"Disconnected"===t._connectionState)throw new Error("The connection was stopped during negotiation.");if(o.error)throw new Error(o.error);if(o.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(o.url&&(n=o.url),o.accessToken){const c=o.accessToken;t._accessTokenFactory=()=>c}s++}while(o.url&&s<100);if(100===s&&o.url)throw new Error("Negotiate redirection limit exceeded.");yield t._createTransport(n,t._options.transport,o,e)}t.transport instanceof Y&&(t.features.inherentKeepAlive=!0),"Connecting"===t._connectionState&&(t._logger.log(i.Debug,"The HttpConnection connected successfully."),t._connectionState="Connected")}catch(o){return t._logger.log(i.Error,"Failed to start the connection: "+o),t._connectionState="Disconnected",t.transport=void 0,t._stopPromiseResolver(),Promise.reject(o)}})()}_getNegotiationResponse(e){var t=this;return(0,f.Z)(function*(){const n={};if(t._accessTokenFactory){const a=yield t._accessTokenFactory();a&&(n[M.Authorization]=`Bearer ${a}`)}const[o,s]=x();n[o]=s;const c=t._resolveNegotiateUrl(e);t._logger.log(i.Debug,`Sending negotiation request: ${c}.`);try{const a=yield t._httpClient.post(c,{content:"",headers:b(b({},n),t._options.headers),timeout:t._options.timeout,withCredentials:t._options.withCredentials});if(200!==a.statusCode)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${a.statusCode}'`));const g=JSON.parse(a.content);return(!g.negotiateVersion||g.negotiateVersion<1)&&(g.connectionToken=g.connectionId),g}catch(a){let g="Failed to complete negotiation with the server: "+a;return a instanceof I&&404===a.statusCode&&(g+=" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),t._logger.log(i.Error,g),Promise.reject(new le(g))}})()}_createConnectUrl(e,t){return t?e+(-1===e.indexOf("?")?"?":"&")+`id=${t}`:e}_createTransport(e,t,n,o){var s=this;return(0,f.Z)(function*(){let c=s._createConnectUrl(e,n.connectionToken);if(s._isITransport(t))return s._logger.log(i.Debug,"Connection was provided an instance of ITransport, using that directly."),s.transport=t,yield s._startTransport(c,o),void(s.connectionId=n.connectionId);const a=[],g=n.availableTransports||[];let h=n;for(const u of g){const E=s._resolveTransportOrError(u,t,o);if(E instanceof Error)a.push(`${u.transport} failed:`),a.push(E);else if(s._isITransport(E)){if(s.transport=E,!h){try{h=yield s._getNegotiationResponse(e)}catch(P){return Promise.reject(P)}c=s._createConnectUrl(e,h.connectionToken)}try{return yield s._startTransport(c,o),void(s.connectionId=h.connectionId)}catch(P){if(s._logger.log(i.Error,`Failed to start the transport '${u.transport}': ${P}`),h=void 0,a.push(new ae(`${u.transport} failed: ${P}`,m[u.transport])),"Connecting"!==s._connectionState){const ne="Failed to select transport before stop() was called.";return s._logger.log(i.Debug,ne),Promise.reject(new Error(ne))}}}}return Promise.reject(a.length>0?new he(`Unable to connect to the server with any of the available transports. ${a.join(" ")}`,a):new Error("None of the transports supported by the client are supported by the server."))})()}_constructTransport(e){switch(e){case m.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new ke(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case m.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new Ee(this._httpClient,this._accessTokenFactory,this._logger,this._options);case m.LongPolling:return new Y(this._httpClient,this._accessTokenFactory,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.transport.onclose=n=>this._stopConnection(n),this.transport.connect(e,t)}_resolveTransportOrError(e,t,n){const o=m[e.transport];if(null==o)return this._logger.log(i.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(!function(r,e){return!r||0!=(e&r)}(t,o))return this._logger.log(i.Debug,`Skipping transport '${m[o]}' because it was disabled by the client.`),new ce(`'${m[o]}' is disabled by the client.`,o);if(!(e.transferFormats.map(c=>y[c]).indexOf(n)>=0))return this._logger.log(i.Debug,`Skipping transport '${m[o]}' because it does not support the requested transfer format '${y[n]}'.`),new Error(`'${m[o]}' does not support ${y[n]}.`);if(o===m.WebSockets&&!this._options.WebSocket||o===m.ServerSentEvents&&!this._options.EventSource)return this._logger.log(i.Debug,`Skipping transport '${m[o]}' because it is not supported in your environment.'`),new ie(`'${m[o]}' is not supported in your environment.`,o);this._logger.log(i.Debug,`Selecting transport '${m[o]}'.`);try{return this._constructTransport(o)}catch(c){return c}}_isITransport(e){return e&&"object"==typeof e&&"connect"in e}_stopConnection(e){if(this._logger.log(i.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,"Disconnected"!==this._connectionState){if("Connecting"===this._connectionState)throw this._logger.log(i.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this._connectionState&&this._stopPromiseResolver(),e?this._logger.log(i.Error,`Connection disconnected with error '${e}'.`):this._logger.log(i.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(t=>{this._logger.log(i.Error,`TransportSendQueue.stop() threw error '${t}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(i.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}else this._logger.log(i.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`)}_resolveUrl(e){if(0===e.lastIndexOf("https://",0)||0===e.lastIndexOf("http://",0))return e;if(!C.isBrowser||!window.document)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(i.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=e.indexOf("?");let n=e.substring(0,-1===t?e.length:t);return"/"!==n[n.length-1]&&(n+="/"),n+="negotiate",n+=-1===t?"":e.substring(t),-1===n.indexOf("negotiateVersion")&&(n+=-1===t?"?":"&",n+="negotiateVersion="+this._negotiateVersion),n}}class F{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new H,this._transportResult=new H,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new H),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}_sendLoop(){var e=this;return(0,f.Z)(function*(){for(;;){if(yield e._sendBufferedData.promise,!e._executing){e._transportResult&&e._transportResult.reject("Connection stopped.");break}e._sendBufferedData=new H;const t=e._transportResult;e._transportResult=void 0;const n="string"==typeof e._buffer[0]?e._buffer.join(""):F._concatBuffers(e._buffer);e._buffer.length=0;try{yield e._transport.send(n),t.resolve()}catch(o){t.reject(o)}}})()}static _concatBuffers(e){const t=e.map(s=>s.byteLength).reduce((s,c)=>s+c),n=new Uint8Array(t);let o=0;for(const s of e)n.set(new Uint8Array(s),o),o+=s.byteLength;return n.buffer}}class H{constructor(){this.promise=new Promise((e,t)=>[this._resolver,this._rejecter]=[e,t])}resolve(){this._resolver()}reject(e){this._rejecter(e)}}class v{static write(e){return`${e}${v.RecordSeparator}`}static parse(e){if(e[e.length-1]!==v.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split(v.RecordSeparator);return t.pop(),t}}v.RecordSeparatorCode=30,v.RecordSeparator=String.fromCharCode(v.RecordSeparatorCode);class Ie{writeHandshakeRequest(e){return v.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,n;if(L(e)){const a=new Uint8Array(e),g=a.indexOf(v.RecordSeparatorCode);if(-1===g)throw new Error("Message is incomplete.");const h=g+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(a.slice(0,h))),n=a.byteLength>h?a.slice(h).buffer:null}else{const a=e,g=a.indexOf(v.RecordSeparator);if(-1===g)throw new Error("Message is incomplete.");const h=g+1;t=a.substring(0,h),n=a.length>h?a.substring(h):null}const o=v.parse(t),s=JSON.parse(o[0]);if(s.type)throw new Error("Expected a handshake response from the server.");return[n,s]}}var d=(()=>{return(r=d||(d={}))[r.Invocation=1]="Invocation",r[r.StreamItem=2]="StreamItem",r[r.Completion=3]="Completion",r[r.StreamInvocation=4]="StreamInvocation",r[r.CancelInvocation=5]="CancelInvocation",r[r.Ping=6]="Ping",r[r.Close=7]="Close",d;var r})();class xe{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new _e(this,e)}}var _=(()=>{return(r=_||(_={})).Disconnected="Disconnected",r.Connecting="Connecting",r.Connected="Connected",r.Disconnecting="Disconnecting",r.Reconnecting="Reconnecting",_;var r})();class z{constructor(e,t,n,o){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(i.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},w.isRequired(e,"connection"),w.isRequired(t,"logger"),w.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=3e4,this.keepAliveIntervalInMilliseconds=15e3,this._logger=t,this._protocol=n,this.connection=e,this._reconnectPolicy=o,this._handshakeProtocol=new Ie,this.connection.onreceive=s=>this._processIncomingData(s),this.connection.onclose=s=>this._connectionClosed(s),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=_.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:d.Ping})}static create(e,t,n,o){return new z(e,t,n,o)}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==_.Disconnected&&this._connectionState!==_.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}_startWithStateTransitions(){var e=this;return(0,f.Z)(function*(){if(e._connectionState!==_.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));e._connectionState=_.Connecting,e._logger.log(i.Debug,"Starting HubConnection.");try{yield e._startInternal(),C.isBrowser&&document&&document.addEventListener("freeze",e._freezeEventListener),e._connectionState=_.Connected,e._connectionStarted=!0,e._logger.log(i.Debug,"HubConnection connected successfully.")}catch(t){return e._connectionState=_.Disconnected,e._logger.log(i.Debug,`HubConnection failed to start successfully because of error '${t}'.`),Promise.reject(t)}})()}_startInternal(){var e=this;return(0,f.Z)(function*(){e._stopDuringStartError=void 0,e._receivedHandshakeResponse=!1;const t=new Promise((n,o)=>{e._handshakeResolver=n,e._handshakeRejecter=o});yield e.connection.start(e._protocol.transferFormat);try{const n={protocol:e._protocol.name,version:e._protocol.version};if(e._logger.log(i.Debug,"Sending handshake request."),yield e._sendMessage(e._handshakeProtocol.writeHandshakeRequest(n)),e._logger.log(i.Information,`Using HubProtocol '${e._protocol.name}'.`),e._cleanupTimeout(),e._resetTimeoutPeriod(),e._resetKeepAliveInterval(),yield t,e._stopDuringStartError)throw e._stopDuringStartError}catch(n){throw e._logger.log(i.Debug,`Hub handshake failed with error '${n}' during start(). Stopping HubConnection.`),e._cleanupTimeout(),e._cleanupPingTimer(),yield e.connection.stop(n),n}})()}stop(){var e=this;return(0,f.Z)(function*(){const t=e._startPromise;e._stopPromise=e._stopInternal(),yield e._stopPromise;try{yield t}catch(n){}})()}_stopInternal(e){return this._connectionState===_.Disconnected?(this._logger.log(i.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve()):this._connectionState===_.Disconnecting?(this._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState=_.Disconnecting,this._logger.log(i.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(i.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new Error("The connection was stopped before the hub handshake could complete."),this.connection.stop(e)))}stream(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._createStreamInvocation(e,t,o);let c;const a=new xe;return a.cancelCallback=()=>{const g=this._createCancelInvocation(s.invocationId);return delete this._callbacks[s.invocationId],c.then(()=>this._sendWithProtocol(g))},this._callbacks[s.invocationId]=(g,h)=>{h?a.error(h):g&&(g.type===d.Completion?g.error?a.error(new Error(g.error)):a.complete():a.next(g.item))},c=this._sendWithProtocol(s).catch(g=>{a.error(g),delete this._callbacks[s.invocationId]}),this._launchStreams(n,c),a}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._sendWithProtocol(this._createInvocation(e,t,!0,o));return this._launchStreams(n,s),s}invoke(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._createInvocation(e,t,!1,o);return new Promise((a,g)=>{this._callbacks[s.invocationId]=(u,E)=>{E?g(E):u&&(u.type===d.Completion?u.error?g(new Error(u.error)):a(u.result):g(new Error(`Unexpected message type: ${u.type}`)))};const h=this._sendWithProtocol(s).catch(u=>{g(u),delete this._callbacks[s.invocationId]});this._launchStreams(n,h)})}on(e,t){!e||!t||(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),-1===this._methods[e].indexOf(t)&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const n=this._methods[e];if(n)if(t){const o=n.indexOf(t);-1!==o&&(n.splice(o,1),0===n.length&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const t=this._protocol.parseMessages(e,this._logger);for(const n of t)switch(n.type){case d.Invocation:this._invokeClientMethod(n);break;case d.StreamItem:case d.Completion:{const o=this._callbacks[n.invocationId];if(o){n.type===d.Completion&&delete this._callbacks[n.invocationId];try{o(n)}catch(s){this._logger.log(i.Error,`Stream callback threw error: ${q(s)}`)}}break}case d.Ping:break;case d.Close:{this._logger.log(i.Information,"Close message received from server.");const o=n.error?new Error("Server returned an error on close: "+n.error):void 0;!0===n.allowReconnect?this.connection.stop(o):this._stopPromise=this._stopInternal(o);break}default:this._logger.log(i.Warning,`Invalid message type: ${n.type}.`)}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,n;try{[n,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(o){const s="Error parsing handshake response: "+o;this._logger.log(i.Error,s);const c=new Error(s);throw this._handshakeRejecter(c),c}if(t.error){const o="Server returned handshake error: "+t.error;this._logger.log(i.Error,o);const s=new Error(o);throw this._handshakeRejecter(s),s}return this._logger.log(i.Debug,"Server handshake complete."),this._handshakeResolver(),n}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=(new Date).getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){var e=this;if(!(this.connection.features&&this.connection.features.inherentKeepAlive||(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),void 0!==this._pingServerHandle))){let t=this._nextKeepAlive-(new Date).getTime();t<0&&(t=0),this._pingServerHandle=setTimeout((0,f.Z)(function*(){if(e._connectionState===_.Connected)try{yield e._sendMessage(e._cachedPingMessage)}catch(n){e._cleanupPingTimer()}}),t)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}_invokeClientMethod(e){const t=this._methods[e.target.toLowerCase()];if(t){try{t.forEach(n=>n.apply(this,e.arguments))}catch(n){this._logger.log(i.Error,`A callback for the method ${e.target.toLowerCase()} threw error '${n}'.`)}if(e.invocationId){const n="Server requested a response, which is not supported in this version of the client.";this._logger.log(i.Error,n),this._stopPromise=this._stopInternal(new Error(n))}}else this._logger.log(i.Warning,`No client method with the name '${e.target}' found.`)}_connectionClosed(e){this._logger.log(i.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new Error("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===_.Disconnecting?this._completeClose(e):this._connectionState===_.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===_.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=_.Disconnected,this._connectionStarted=!1,C.isBrowser&&document&&document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(t=>t.apply(this,[e]))}catch(t){this._logger.log(i.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}_reconnect(e){var t=this;return(0,f.Z)(function*(){const n=Date.now();let o=0,s=void 0!==e?e:new Error("Attempting to reconnect due to a unknown error."),c=t._getNextRetryDelay(o++,0,s);if(null===c)return t._logger.log(i.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),void t._completeClose(e);if(t._connectionState=_.Reconnecting,t._logger.log(i.Information,e?`Connection reconnecting because of error '${e}'.`:"Connection reconnecting."),0!==t._reconnectingCallbacks.length){try{t._reconnectingCallbacks.forEach(a=>a.apply(t,[e]))}catch(a){t._logger.log(i.Error,`An onreconnecting callback called with error '${e}' threw error '${a}'.`)}if(t._connectionState!==_.Reconnecting)return void t._logger.log(i.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.")}for(;null!==c;){if(t._logger.log(i.Information,`Reconnect attempt number ${o} will start in ${c} ms.`),yield new Promise(a=>{t._reconnectDelayHandle=setTimeout(a,c)}),t._reconnectDelayHandle=void 0,t._connectionState!==_.Reconnecting)return void t._logger.log(i.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");try{if(yield t._startInternal(),t._connectionState=_.Connected,t._logger.log(i.Information,"HubConnection reconnected successfully."),0!==t._reconnectedCallbacks.length)try{t._reconnectedCallbacks.forEach(a=>a.apply(t,[t.connection.connectionId]))}catch(a){t._logger.log(i.Error,`An onreconnected callback called with connectionId '${t.connection.connectionId}; threw error '${a}'.`)}return}catch(a){if(t._logger.log(i.Information,`Reconnect attempt failed because of error '${a}'.`),t._connectionState!==_.Reconnecting)return t._logger.log(i.Debug,`Connection moved to the '${t._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),void(t._connectionState===_.Disconnecting&&t._completeClose());s=a instanceof Error?a:new Error(a.toString()),c=t._getNextRetryDelay(o++,Date.now()-n,s)}}t._logger.log(i.Information,`Reconnect retries have been exhausted after ${Date.now()-n} ms and ${o} failed attempts. Connection disconnecting.`),t._completeClose()})()}_getNextRetryDelay(e,t,n){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:n})}catch(o){return this._logger.log(i.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${o}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach(n=>{const o=t[n];try{o(null,e)}catch(s){this._logger.log(i.Error,`Stream 'error' callback called with '${e}' threw error: ${q(s)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,n,o){if(n)return 0!==o.length?{arguments:t,streamIds:o,target:e,type:d.Invocation}:{arguments:t,target:e,type:d.Invocation};{const s=this._invocationId;return this._invocationId++,0!==o.length?{arguments:t,invocationId:s.toString(),streamIds:o,target:e,type:d.Invocation}:{arguments:t,invocationId:s.toString(),target:e,type:d.Invocation}}}_launchStreams(e,t){if(0!==e.length){t||(t=Promise.resolve());for(const n in e)e[n].subscribe({complete:()=>{t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n)))},error:o=>{let s;s=o instanceof Error?o.message:o&&o.toString?o.toString():"Unknown error",t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n,s)))},next:o=>{t=t.then(()=>this._sendWithProtocol(this._createStreamItemMessage(n,o)))}})}}_replaceStreamingParams(e){const t=[],n=[];for(let o=0;o<e.length;o++){const s=e[o];if(this._isObservable(s)){const c=this._invocationId;this._invocationId++,t[c]=s,n.push(c.toString()),e.splice(o,1)}}return[t,n]}_isObservable(e){return e&&e.subscribe&&"function"==typeof e.subscribe}_createStreamInvocation(e,t,n){const o=this._invocationId;return this._invocationId++,0!==n.length?{arguments:t,invocationId:o.toString(),streamIds:n,target:e,type:d.StreamInvocation}:{arguments:t,invocationId:o.toString(),target:e,type:d.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:d.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:d.StreamItem}}_createCompletionMessage(e,t,n){return t?{error:t,invocationId:e,type:d.Completion}:{invocationId:e,result:n,type:d.Completion}}}class Me{constructor(){this.name="json",this.version=1,this.transferFormat=y.Text}parseMessages(e,t){if("string"!=typeof e)throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];null===t&&(t=$.instance);const n=v.parse(e),o=[];for(const s of n){const c=JSON.parse(s);if("number"!=typeof c.type)throw new Error("Invalid payload.");switch(c.type){case d.Invocation:this._isInvocationMessage(c);break;case d.StreamItem:this._isStreamItemMessage(c);break;case d.Completion:this._isCompletionMessage(c);break;case d.Ping:case d.Close:break;default:t.log(i.Information,"Unknown message type '"+c.type+"' ignored.");continue}o.push(c)}return o}writeMessage(e){return v.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),void 0!==e.invocationId&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),void 0===e.item)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_assertNotEmptyString(e,t){if("string"!=typeof e||""===e)throw new Error(t)}}const Ae={trace:i.Trace,debug:i.Debug,info:i.Information,information:i.Information,warn:i.Warning,warning:i.Warning,error:i.Error,critical:i.Critical,none:i.None};class He{configureLogging(e){if(w.isRequired(e,"logging"),void 0!==e.log)this.logger=e;else if("string"==typeof e){const t=function(r){const e=Ae[r.toLowerCase()];if(void 0!==e)return e;throw new Error(`Unknown log level: ${r}`)}(e);this.logger=new O(t)}else this.logger=new O(e);return this}withUrl(e,t){return w.isRequired(e,"url"),w.isNotEmpty(e,"url"),this.url=e,this.httpConnectionOptions="object"==typeof t?b(b({},this.httpConnectionOptions),t):A(b({},this.httpConnectionOptions),{transport:t}),this}withHubProtocol(e){return w.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return this.reconnectPolicy=e?Array.isArray(e)?new K(e):e:new K,this}build(){const e=this.httpConnectionOptions||{};if(void 0===e.logger&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new Te(this.url,e);return z.create(t,this.logger||$.instance,this.protocol||new Me,this.reconnectPolicy)}}var Ue=p(8095),te=p(8260),We=p(4522);let je=(()=>{class r{constructor(t){this.http=t,this.connection=(new He).withUrl(te.N.hubConnectionURL).configureLogging(i.Information).build(),this.POST_URL=te.N.broadcastURL,this.receivedMessageObject=new W,this.sharedObj=new Ue.xQ,this.connection.onclose(()=>(0,X.mG)(this,void 0,void 0,function*(){yield this.start()})),this.connection.on("ReceiveOne",(n,o)=>{this.mapReceivedMessage(n,o)}),this.start()}start(){return(0,X.mG)(this,void 0,void 0,function*(){try{yield this.connection.start(),console.log("connected")}catch(t){console.log("Erro de conex\xe3o: "+t),setTimeout(()=>this.start(),5e3)}})}mapReceivedMessage(t,n){this.receivedMessageObject.user=t,this.receivedMessageObject.msgText=n,this.sharedObj.next(this.receivedMessageObject)}broadcastMessage(t){this.http.post(this.POST_URL,t).subscribe(n=>console.log(n))}retrieveMappedObject(){return this.sharedObj.asObservable()}}return r.\u0275fac=function(t){return new(t||r)(l.LFG(We.eN))},r.\u0275prov=l.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})();function Ze(r,e){if(1&r&&(l.TgZ(0,"div",10),l.TgZ(1,"div",11),l.TgZ(2,"span",12),l._uU(3),l.qZA(),l.TgZ(4,"p",13),l._uU(5),l.qZA(),l.qZA(),l.qZA()),2&r){const t=e.$implicit,n=l.oxw();l.xp6(1),l.Q6J("ngClass",t.user===n.msgDto.user?"message__content--right":"message__content--left"),l.xp6(2),l.hij(" ",t.user," "),l.xp6(2),l.hij(" ",t.msgText," ")}}const Le=[{path:"",component:(()=>{class r{constructor(t){this.chatService=t,this.mensagens=[{id:1,from:{id:1,name:"CT"},to:{id:2,name:"TR"},message:"I'm at B"},{id:2,from:{id:2,name:"TR"},to:{id:1,name:"CT"},message:"Negative!"},{id:3,from:{id:1,name:"CT"},to:{id:2,name:"TR"},message:"Knife mid?"},{id:4,from:{id:2,name:"TR"},to:{id:1,name:"CT"},message:"Roger that!"}],this.msgDto=new W,this.msgInboxArray=[]}ngOnInit(){this.chatService.retrieveMappedObject().subscribe(t=>{this.addToInbox(t)})}send(){if(this.msgDto){if(0==this.msgDto.user.length||0==this.msgDto.msgText.length)return void window.alert("Both fields are required.");this.chatService.broadcastMessage(this.msgDto),this.msgDto.msgText=""}}addToInbox(t){let n=new W;n.user=t.user,n.msgText=t.msgText,this.msgInboxArray.push(n)}}return r.\u0275fac=function(t){return new(t||r)(l.Y36(je))},r.\u0275cmp=l.Xpm({type:r,selectors:[["app-home"]],decls:16,vars:3,consts:[["collapse","condense"],["size","large"],["id","content"],["class","message",4,"ngFor","ngForOf"],["size","5"],["clearInput","","placeholder","WHO AAREEE UUUUUU",3,"ngModel","ngModelChange"],["clearInput","","placeholder","Lance a braba",3,"ngModel","ngModelChange"],["size","2"],["color","primary",3,"click"],["name","send-outline"],[1,"message"],[3,"ngClass"],[1,"message__title"],[1,"message__text"]],template:function(t,n){1&t&&(l.TgZ(0,"ion-header",0),l.TgZ(1,"ion-toolbar"),l.TgZ(2,"ion-title",1),l._uU(3,"Conversation wifi mi"),l.qZA(),l.qZA(),l.qZA(),l.TgZ(4,"ion-content"),l.TgZ(5,"div",2),l.YNc(6,Ze,6,3,"div",3),l.qZA(),l.qZA(),l.TgZ(7,"ion-footer"),l.TgZ(8,"ion-row"),l.TgZ(9,"ion-col",4),l.TgZ(10,"ion-input",5),l.NdJ("ngModelChange",function(s){return n.msgDto.user=s}),l.qZA(),l.qZA(),l.TgZ(11,"ion-col",4),l.TgZ(12,"ion-input",6),l.NdJ("ngModelChange",function(s){return n.msgDto.msgText=s}),l.qZA(),l.qZA(),l.TgZ(13,"ion-col",7),l.TgZ(14,"ion-button",8),l.NdJ("click",function(){return n.send()}),l._UZ(15,"ion-icon",9),l.qZA(),l.qZA(),l.qZA(),l.qZA()),2&t&&(l.xp6(6),l.Q6J("ngForOf",n.msgInboxArray),l.xp6(4),l.Q6J("ngModel",n.msgDto.user),l.xp6(2),l.Q6J("ngModel",n.msgDto.msgText))},directives:[k.Gu,k.sr,k.wd,k.W2,N.sg,k.fr,k.Nd,k.wI,k.pK,k.j9,U.JJ,U.On,k.YG,k.gu,N.mk],styles:["ion-content[_ngcontent-%COMP%]{height:85%;min-height:85%;max-height:85%;--background: repeat-y center/100% 100% url(chat-background-1.0afeabfc95769b00.png)}#content[_ngcontent-%COMP%]{height:100%;display:flex;flex-direction:column;padding:.5rem .3rem}.message[_ngcontent-%COMP%]{width:100%}.message__content--left[_ngcontent-%COMP%]{float:left}.message__content--right[_ngcontent-%COMP%]{float:right}.message__content--left[_ngcontent-%COMP%], .message__content--right[_ngcontent-%COMP%]{width:-moz-fit-content;width:fit-content;min-width:45%;max-width:100%;padding:.25rem .4rem;background-color:#c0ffd0;border-radius:6px 6px 6px 0}.message__content--left[_ngcontent-%COMP%]   span.message__title[_ngcontent-%COMP%], .message__content--left[_ngcontent-%COMP%]   p.message__text[_ngcontent-%COMP%], .message__content--right[_ngcontent-%COMP%]   span.message__title[_ngcontent-%COMP%], .message__content--right[_ngcontent-%COMP%]   p.message__text[_ngcontent-%COMP%]{padding:0;margin:0}.message__content--left[_ngcontent-%COMP%]   span.message__title[_ngcontent-%COMP%], .message__content--right[_ngcontent-%COMP%]   span.message__title[_ngcontent-%COMP%]{font-size:1rem;font-weight:800;white-space:nowrap}.message__content--left[_ngcontent-%COMP%]   p.message__text[_ngcontent-%COMP%], .message__content--right[_ngcontent-%COMP%]   p.message__text[_ngcontent-%COMP%]{font-size:1.2rem;white-space:normal}.message[_ngcontent-%COMP%]:not(.message:nth-child(1)){margin-top:.55rem}.msg-box[_ngcontent-%COMP%]{width:100%;height:calc(100% - 140px);margin-top:20px;border:2px solid #191D32;border-radius:.5em;padding:10px 30px;font-size:14px;overflow:auto}.msg-box[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none}.msg-box[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   .ex-msg[_ngcontent-%COMP%]{margin-bottom:10px;color:#459c1a;text-align:left}.msg-box[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   .in-msg[_ngcontent-%COMP%]{margin-bottom:10px;color:#d15;text-align:right}"]}),r})()}];let Be=(()=>{class r{}return r.\u0275fac=function(t){return new(t||r)},r.\u0275mod=l.oAB({type:r}),r.\u0275inj=l.cJS({imports:[[J.Bz.forChild(Le)],J.Bz]}),r})(),Fe=(()=>{class r{}return r.\u0275fac=function(t){return new(t||r)},r.\u0275mod=l.oAB({type:r}),r.\u0275inj=l.cJS({imports:[[N.ez,U.u5,k.Pc,Be]]}),r})()}}]);